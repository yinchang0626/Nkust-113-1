修課學生: 謝銘峯
學號: F112152134

主要的操作按照老師上課所講的步驟，由於學生上課聽不太懂，
所以按照上課時所錄的影片重複多看幾遍，並且條列各個步驟應該要做的動作，逐項完成，
以下是筆記的步驟。

1. VS建立新專案，Open data放入Data中
2. 開檔案加入類別
3. 定義Open data欄位
4. 開啟SSMS
5. 打開資料庫物件(Data/ApplicationDbContext.cs)
6. 把SSMS的table抽象化成物件的屬性(建置資料表)
7. 套件管理主控台: Add-Migration Initial(讀.dl、.txt，分析DbContext)
8. Update-Database
9. Controllers資料夾新增Scaffold項目>MVC控制器空白
10. 新增檢視(Views/)(網址的名稱呼應view的名稱)
11. 讀取Open data
12. 資料丟入資料庫


另外，資料庫操作的部分，用截圖的方式放在word檔案: "Final Project Report.docx"，
其中，Open data為期中報告相同的"高雄都會區大眾捷運系統電子票證發行量及交易量"，
檔案在Opendata/E-tickets.csv

欄位分為:
年分(Year)
累計發卡量(Cumulative_amount)
交易金額(Deal_payment)
交易筆數-合計(Quantity_total)
交易筆數-搭乘捷運(Quantity_metro)
交易筆數-搭乘公車(Quantity_bus)
交易筆數-撘乘渡輪(Quantity_boat)

----------------------------------------------------------------------------------
學習心得:
原本上課幾乎聽不懂，因為不知道整體的概念與架構，所以有點擔心期末作業做不出來，
還好有先把上課內容錄下，才慢慢抓出方向。

一開始所建立的專案，其實就是依據開發人員的需求決定要建立什麼樣的模板，
模板會直接用資料夾的方式區分不同的開發內容，如網頁、後端資料庫、資料結構等等，
其實就是MVC架構(Model-View-Controller)的流程去區分的。

然後一些預設好的檔案程式，已經將基礎會用到的部分帶出。這部分應該是對有開發經驗的人
來說比較容易，因為已經了解整個架構在玩甚麼，以及在開發前已經有初步的構想；
對於初學者來說，會覺得怎麼一下跑出這麼多檔案，也不知道現在是處於哪個開發階段。
後來我再去了解甚麼是MVC，就會比較清楚知道它發展出來的目的，除了讓開發更容易，
同時也將後期的維護成本考慮進來，減少分工之間的鴻溝。

稍微搞懂概念之後，就會覺得反而比起作為工具的程式語法，
了解軟體工程的開發流程與原理更為重要，不只知道自己
開發時所做的階段位置，也知道軟體的開發是團隊合作，彼此盡可能減少溝通的障礙。
還好後來有比較了解了，除了比較有成就感，也覺得很有趣，發覺其中的有趣之處，
學習起來就比較不會感到辛苦跟無助，同時也很佩服軟體工程有各種不同的開發流程，
即使不同但目的其實都是類似的，我覺得這是修這堂課最大的收穫。