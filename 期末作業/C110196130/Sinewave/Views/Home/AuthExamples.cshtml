@{
    var inputCss = $"txtName {Css.InputText} m-2 inline-block max-w-[220px]";
}

<div class="mt-8">
    <div class="mt-3 mx-auto max-w-lg text-center">
        <h1 class="@Css.H1">
            @ViewData["Title"]
        </h1>
        <p class="my-2">
            Learn about <a class="@Css.Link" href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.
        </p>
    </div>
</div>

<div class="flex">
    @if (!User.IsAuthenticated())
    {
        <div class="mx-auto">
            <a asp-area="" asp-controller="Account" asp-action="Login" class="@Html.ClassNames(Css.PrimaryButton, "my-4")">
                You are not yet authenticated, please sign in.
            </a>
        </div>
    }
    else
    {
        <div class="mx-auto">
            <form asp-area="" asp-controller="Account" asp-action="Logout" method="post">
                <div class="flex items-center my-4">
                    <img src="@User.GetPicture()" class="w-8 h-8 mr-2">
                    <div>Hi @User.GetDisplayName()</div>
                </div>
                <div>
                    <button type="submit" class="@Css.SecondaryButton">Sign Out</button>
                </div>
            </form>
        </div>
    }
</div>

<div class="mt-16 flex flex-wrap justify-evenly">
    <div>
        <h3 class="@Css.H3">Public APIs and MVC Views</h3>
        
        <ul class="list-disc ml-8">
            <li><a class="@Css.Link" href="/docs/privacy">/docs/privacy</a> - Privacy Markdown Page</li>
            <li><a class="@Css.Link" href="/Account/Login">/Account/Login</a> - Sign In MVC Page</li>
            <li><a class="@Css.Link" href="/Account/Register">/Account/Register</a> - Register User MVC Page</li>
        </ul>
        
        <form class="mt-8" action="/hello">
            <h4 class="ml-16 text-lg font-semibold">/hello ServiceStack API</h4>
            <label>Name: </label>
            <input type="text" class="@inputCss" name="Name">
            <span class="apiurl @Css.Link"></span>
            <div class="result ml-16 text-lg text-green-700 font-semibold"></div>
        </form>
    </div>
    <div>
        <h3 class="@Css.H3">Secure APIs and MVC Views</h3>
        
        <ul class="list-disc ml-8">
            <li><a class="@Css.Link" href="/Home/RequiresAuth">/Home/RequiresAuth</a> - Requires Authentication MVC Page</li>
            <li><a class="@Css.Link" href="/Home/RequiresRole">/Home/RequiresRole</a> - Requires <b>Manager</b> Role MVC Page</li>
            <li><a class="@Css.Link" href="/Home/RequiresAdmin">/Home/RequiresAdmin</a> - Requires <b>Admin</b> User MVC Page</li>
        </ul>
    </div>
</div>

@section Scripts {
<script type="module">
import { parseResponseStatus } from "@@servicestack/client"

function callApi() {
    const $result = $(this).parent().find('.result')
    const $apiurl = $(this).parent().find('.apiurl')
    if (this.value) {
        const apiUrl =  $(this).parent().attr('action') + "/" + encodeURIComponent(this.value)
        $apiurl.html(`<a class="whitespace-nowrap" href="${apiUrl}">${apiUrl.replace(/%20/g,' ')}</a>`)
        $.getJSON(apiUrl)
            .then(function (r) {
                $result.html(r.result)
            }).fail(function (jq, jqStatus, statusText) {
                let err, errMsg = "The request failed with: " + (statusText || jqStatus)
                try {
                    err = parseResponseStatus(jq.responseText)
                    errMsg = err.message || errMsg
                } catch (e) {
                }
                $result.html(`<div class="text-danger">${errMsg}</div>`)
            })
    } else {
        $result.add($apiurl).html("")
    }
}

$(".txtName").keyup(callApi).each(callApi)
</script>
}
